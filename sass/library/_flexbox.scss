// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

@mixin inline-flex($important:false) {
	@if $important == true {
		//display: -webkit-box !important;
		//display: -moz-box !important;
		//display: -ms-inline-flexbox !important;
		display: -webkit-inline-flex !important;
		display: inline-flex !important;
	} @else {
		//display: -webkit-box;
		//display: -moz-box;
		//display: -ms-inline-flexbox;
		display: -webkit-inline-flex;
		display: inline-flex;
	}
}

@mixin block-flex($important:false) {
	@if $important == true {
		//display: -webkit-box !important;
		//display: -moz-box !important;
		//display: -ms-flexbox !important;
		display: -webkit-flex !important;
		display: flex !important;
	} @else {
		//display: -webkit-box;
		//display: -moz-box;
		//display: -ms-flexbox;
		display: -webkit-flex;
		display: flex;
	}
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
	//-webkit-box-flex: $values;
	//-moz-box-flex: $values;
	-webkit-flex: $values;
	//-ms-flex: $values;
	flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
	-webkit-flex-direction: $direction;
	//-moz-flex-direction: $direction;
	//-ms-flex-direction: $direction;
	flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
	-webkit-flex-wrap: $wrap;
	//-moz-flex-wrap: $wrap;
	//-ms-flex-wrap: $wrap;
	flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
	-webkit-flex-flow: $flow;
	//-moz-flex-flow: $flow;
	//-ms-flex-flow: $flow;
	flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
	//-webkit-box-ordinal-group: $val;
	//-moz-box-ordinal-group: $val;
	//-ms-flex-order: $val;
	//-webkit-order: $val;
	order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
	-webkit-flex-grow: $grow;
	//-moz-flex-grow: $grow;
	//-ms-flex-grow: $grow;
	flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
	-webkit-flex-shrink: $shrink;
	//-moz-flex-shrink: $shrink;
	//-ms-flex-shrink: $shrink;
	flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
	-webkit-flex-basis: $width;
	//-moz-flex-basis: $width;
	//-ms-flex-basis: $width;
	flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
	-webkit-justify-content: $justify;
	//-moz-justify-content: $justify;
	//-ms-justify-content: $justify;
	justify-content: $justify;
	-ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
	-webkit-align-content: $align;
	//-moz-align-content: $align;
	//-ms-align-content: $align;
	align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
	-webkit-align-items: $align;
	//-moz-align-items: $align;
	//-ms-align-items: $align;
	align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
	-webkit-align-self: $align;
	//-moz-align-self: $align;
	//-ms-align-self: $align;
	align-self: $align;
}

// Flexbox display
@mixin flexbox($config:'', $important:false) {
	@if index($config, 'inline') {
		@include inline-flex($important);
	} @else {
		@include block-flex($important);
	}
	@if index($config, 'wrap') {
		@include flex-wrap(wrap);
	}
	@if index($config, 'column') {
		@include flex-direction(column);
		@if index($config, 'center') {
			@include align-items(center);
		}
		@if index($config, 'middle') {
			@include justify-content(center);
		}
		@if index($config, 'bottom') {
			@include justify-content(flex-end);
		}
		@if index($config, 'stretch') {
			@include align-items(stretch);
		}
		@if index($config, 'split') {
			@include justify-content(space-between);
		}
	} @else {
		@if index($config, 'center') {
			@include justify-content(center);
		}
		@if index($config, 'left') {
			@include justify-content(flex-start);
		}
		@if index($config, 'right') {
			@include justify-content(flex-end);
		}
		@if index($config, 'stretch') {
			@include justify-content(stretch);
		}
		@if index($config, 'split') {
			@include justify-content(space-between);
		}
		@if index($config, 'even') {
			@include justify-content(space-around);
		}
		@if index($config, 'middle') {
			@include align-items(center);
		}
		@if index($config, 'bottom') {
			@include align-items(flex-end);
		}
	}
	@if index($config, 'stretch') {
		@include justify-content(stretch);
	}
}
